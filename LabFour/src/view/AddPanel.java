/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import com.github.lgooddatepicker.components.DatePickerSettings;
import data.User;
import data.UserDirectory;
import java.awt.CardLayout;
import java.awt.Image;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author imkus
 */
public class AddPanel extends javax.swing.JPanel {

    /**
     * Creates new form ListPanel
     */
    String employeeId;
    UserDirectory userDirectory;
    JPanel mainPanel;
    CardLayout cardLayout;
    LocalDate today;
    Image profileImage;

    public AddPanel(JPanel mainPanel, UserDirectory userDirectory, String employeeId) {
        initComponents();
        today = LocalDate.now();
        this.mainPanel = mainPanel;
        this.employeeId = employeeId;
        cardLayout = (CardLayout) mainPanel.getLayout();
        this.userDirectory = userDirectory;
//        genderComboBox.setModel(new DefaultComboBoxModel<>(User.Gender.values()));
        DatePickerSettings birthDateSettings = new DatePickerSettings();
        birthDateSettings.setAllowKeyboardEditing(false);
        birthDateSettings.setAllowEmptyDates(false);
        birthDateSettings.setFirstDayOfWeek(DayOfWeek.MONDAY);
        birthDatePicker.setSettings(birthDateSettings);
        DatePickerSettings startDateSettings = new DatePickerSettings();
        startDateSettings.setAllowKeyboardEditing(false);
        startDateSettings.setAllowEmptyDates(false);
        startDateSettings.setFirstDayOfWeek(DayOfWeek.MONDAY);
        startDatePicker.setSettings(startDateSettings);

        birthDateSettings.setDateRangeLimits(LocalDate.MIN, today.minusYears(18));

        if (employeeId != null) {
            titleLabel.setText("Edit Employee");
            User user = userDirectory.getUser(employeeId);
            imageView.setIcon(new ImageIcon(user.getProfileImage()));
            birthDatePicker.setDate(user.getBirthDate());
            startDateSettings.setDateRangeLimits(user.getStartDate(), LocalDate.MAX);
            startDatePicker.setDate(user.getStartDate());
            firstNameField.setText(user.getFirstName());
            lastNameField.setText(user.getLastName());
            genderComboBox.setSelectedItem(user.getGender());
            levelField.setText(user.getLevel());
            phoneField.setText(user.getPhone());
            emailField.setText(user.getEmail());
            profileImage = user.getProfileImage();
            employeeIdField.setText(employeeId);
        } else {
            imageView.setIcon(new ImageIcon(new ImageIcon(User.DEFAULTIMAGE).getImage().getScaledInstance(150, 150, Image.SCALE_DEFAULT)));
            birthDatePicker.setDate(today.minusYears(18));
            startDateSettings.setDateRangeLimits(today, LocalDate.MAX);
            startDatePicker.setDate(today);
            employeeIdField.setVisible(false);
            employeeIdLabel.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        firstNameField = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        emailField = new javax.swing.JTextField();
        uploadImageButton = new javax.swing.JButton();
        saveUserButton = new javax.swing.JButton();
        genderComboBox = new javax.swing.JComboBox<>();
        levelLabel = new javax.swing.JLabel();
        startDatePicker = new com.github.lgooddatepicker.components.DatePicker();
        firstNameLabel = new javax.swing.JLabel();
        lastNameField = new javax.swing.JTextField();
        levelField = new javax.swing.JTextField();
        birthLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        imagePanel = new javax.swing.JPanel();
        imageView = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JLabel();
        birthDatePicker = new com.github.lgooddatepicker.components.DatePicker();
        startLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        phoneField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        employeeIdLabel = new javax.swing.JLabel();
        employeeIdField = new javax.swing.JTextField();

        genderLabel.setText("Gender");

        backButton.setText("Go Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        uploadImageButton.setText("Select Photo");
        uploadImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadImageButtonActionPerformed(evt);
            }
        });

        saveUserButton.setText("Save Employee");
        saveUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveUserButtonActionPerformed(evt);
            }
        });

        genderComboBox.setModel(new DefaultComboBoxModel<User.Gender>(User.Gender.values())    );

        levelLabel.setText("Level");

        firstNameLabel.setText("First Name");

        birthLabel.setText("DOB");

        titleLabel.setText("Add Employee");
        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N

        imagePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        imageView.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imagePanel.add(imageView, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        phoneLabel.setText("Phone");

        startLabel.setText("Start Date");

        emailLabel.setText("Email");

        lastNameLabel.setText("Last Name");

        employeeIdLabel.setText("Employee ID");

        employeeIdField.setEditable(false);
        employeeIdField.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstNameLabel)
                    .addComponent(lastNameLabel)
                    .addComponent(birthLabel)
                    .addComponent(genderLabel)
                    .addComponent(startLabel)
                    .addComponent(levelLabel)
                    .addComponent(phoneLabel)
                    .addComponent(emailLabel)
                    .addComponent(employeeIdLabel))
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(emailField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(phoneField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(levelField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(birthDatePicker, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(lastNameField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstNameField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(genderComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(startDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(employeeIdField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(uploadImageButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(73, 73, 73))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstNameLabel)
                            .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastNameLabel)
                            .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(birthLabel)
                            .addComponent(birthDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genderLabel)
                            .addComponent(genderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startLabel)
                    .addComponent(uploadImageButton)
                    .addComponent(startDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(levelLabel)
                    .addComponent(levelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveUserButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneLabel)
                    .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabel)
                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeIdLabel)
                    .addComponent(employeeIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        cardLayout.first(mainPanel);
    }//GEN-LAST:event_backButtonActionPerformed

    private void uploadImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadImageButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.addChoosableFileFilter(new FileNameExtensionFilter(
                "Image Files", "jpg", "jpeg", "tiff", "tif", "png", "gif"));
        chooser.setAcceptAllFileFilterUsed(false);
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            System.out.println("file: " + chooser.getSelectedFile().getAbsolutePath());
            profileImage = new ImageIcon(chooser.getSelectedFile().getAbsolutePath()).getImage().getScaledInstance(150, 150, Image.SCALE_DEFAULT);
            imageView.setIcon(new ImageIcon(profileImage));
        }

    }//GEN-LAST:event_uploadImageButtonActionPerformed

    private void saveUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveUserButtonActionPerformed
        // TODO add your handling code here:
        if (firstNameField.getText().isBlank()) {
            JOptionPane.showMessageDialog(this,
                    "First Name should not be empty",
                    "Input Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (lastNameField.getText().isBlank()) {
            JOptionPane.showMessageDialog(this,
                    "Last Name should not be empty",
                    "Input Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (levelField.getText().isBlank()) {
            JOptionPane.showMessageDialog(this,
                    "Level should not be empty",
                    "Input Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (phoneField.getText().isBlank()) {
            JOptionPane.showMessageDialog(this,
                    "Phone should not be empty",
                    "Input Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!Pattern.matches("^\\d*$", phoneField.getText())) {
            JOptionPane.showMessageDialog(this,
                    "Number only accepted in Phone field",
                    "Input Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (phoneField.getText().length() < 10 || phoneField.getText().length() > 10) {
            JOptionPane.showMessageDialog(this,
                    "Phone number size can not be more or less than 10 character",
                    "Input Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (emailField.getText().isBlank()) {
            JOptionPane.showMessageDialog(this,
                    "Country should not be empty",
                    "Input Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!Pattern.matches("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$", emailField.getText())) {
            JOptionPane.showMessageDialog(this,
                    "Email invalid",
                    "Input Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        User user = new User(
                firstNameField.getText(),
                lastNameField.getText(),
                (User.Gender) genderComboBox.getSelectedItem(),
                birthDatePicker.getDate(),
                startDatePicker.getDate(),
                phoneField.getText(),
                emailField.getText(),
                levelField.getText()
        );
        if (profileImage == null) {
            user.setDefaultProfileImage();
        } else {
            user.setProfileImage(profileImage);
        }
        if (employeeId == null) {
            userDirectory.addUser(user);
        } else {
            user.setEmployeeId(employeeId);
            userDirectory.updateUser(employeeId, user);
        }
        JOptionPane.showMessageDialog(this,
                "Employee saved successfully",
                "Success",
                JOptionPane.INFORMATION_MESSAGE);

        cardLayout.first(mainPanel);

    }//GEN-LAST:event_saveUserButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private com.github.lgooddatepicker.components.DatePicker birthDatePicker;
    private javax.swing.JLabel birthLabel;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField employeeIdField;
    private javax.swing.JLabel employeeIdLabel;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JComboBox<User.Gender> genderComboBox;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JLabel imageView;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField levelField;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JTextField phoneField;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JButton saveUserButton;
    private com.github.lgooddatepicker.components.DatePicker startDatePicker;
    private javax.swing.JLabel startLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton uploadImageButton;
    // End of variables declaration//GEN-END:variables
}
